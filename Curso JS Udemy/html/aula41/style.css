/*
506min
style       ID      Classes, atributos e pseudo-classes     Elementos e pseudo-elementos
  X         1       0                                       0
            0       1                                       0
            1       1                                       0
            1       1                                       1
            2       1                                       1
            2       1                                       2
            2       2                                       3
!important: pouco usado, força o navegador.           

display: block é por padrão o display das div em qualquer navegador!
margin: 0   1   3   4       0 é em cima
                            1 é a direita
                            3 é em baixo
                            4 é a esquerda

box-sizing: contet-box      significa que border, padding e margin serão somados.                          
box-sizing: padding-box     significa que o padding vai começar a ser acrescentado para dentro.
box-sizing: border-box       significa que se uma div tem 100px, é 100px para altura e largura+altura e largura do padding+altura e largura da borda. Só a margem não entra até pq a margin é para empurrar o conteúdo para longe de outro.
clear: left ou right        Força o elemento limpar o lado escolhido antes de aparecer.

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    font-size: 40px;
}

.grid {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); */
    /* grid-template-columns: repeat(3, 1fr); pode usar isso também */
    grid-template-rows: repeat(2, 1fr 2fr);
    gap: 30px;
}

.grid div {
    background-color: tomato;
    min-height: 100px;
}

.grid div:nth-child(5) {
    background-color: darkred;
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 6;   
    /* também tem o grid-row: span 1; e grid-column: span 2; */ 
}

@media (max-width: 768px) {
    .grid div:nth-child(5) {
        grid-column: span 1;
    }
}